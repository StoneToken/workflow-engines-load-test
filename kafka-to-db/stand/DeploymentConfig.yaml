kind: Deployment
apiVersion: apps/v1
metadata:
  name: kafka-to-db-kogito
  namespace: kogito-operator-system
  selfLink: >-
    /apis/apps/v1/namespaces/kogito-operator-system/deployments/kafka-to-db-kogito
  uid: 86deb36d-2122-4edf-afa6-94408a6a26fe
  resourceVersion: '39879196'
  generation: 26
  creationTimestamp: '2022-04-29T07:37:28Z'
  labels:
    app.kubernetes.io/instance: kafka-to-db-kogito
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: kafka-to-db
    app.kubernetes.io/version: 1.0.1
    distribVersion: 1.0.1
    helm.sh/chart: kafka-to-db-1.0.1
  annotations:
    deployment.kubernetes.io/revision: '3'
    meta.helm.sh/release-name: kafka-to-db
    meta.helm.sh/release-namespace: kogito-operator-system
  managedFields:
    - manager: dashboard
      operation: Update
      apiVersion: apps/v1
      time: '2022-04-29T07:42:42Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:distribVersion: {}
            f:helm.sh/chart: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:sidecar.istio.io/inject: {}
                f:sidecar.istio.io/proxyCPU: {}
                f:sidecar.istio.io/proxyCPULimit: {}
                f:sidecar.istio.io/proxyMemory: {}
                f:sidecar.istio.io/proxyMemoryLimit: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/version: {}
            f:spec:
              f:containers:
                k:{"name":"kafka-to-db"}:
                  .: {}
                  f:env:
                    .: {}
                    k:{"name":"JAVA_OPTS"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:configMapKeyRef: {}
                    k:{"name":"TZ"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8088,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/home/jboss/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/home/jboss/logs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"config-volume"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"logsshare"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"volume-engine-tmp"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"volume-etc-kafka-to-db-logger-forwarder-sidecar"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
    - manager: kubelite
      operation: Update
      apiVersion: apps/v1
      time: '2022-04-29T09:21:27Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      subresource: status
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: kafka-to-db-kogito
      app.kubernetes.io/name: kafka-to-db
      app.kubernetes.io/version: 1.0.1
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/instance: kafka-to-db-kogito
        app.kubernetes.io/name: kafka-to-db
        app.kubernetes.io/version: 1.0.1
      annotations:
        sidecar.istio.io/inject: 'false'
        sidecar.istio.io/proxyCPU: 100m
        sidecar.istio.io/proxyCPULimit: 200m
        sidecar.istio.io/proxyMemory: 128Mi
        sidecar.istio.io/proxyMemoryLimit: 256Mi
    spec:
      volumes:
        - name: config-volume
          configMap:
            name: kafka-to-db-kogito
            defaultMode: 288
        - name: logsshare
          emptyDir: {}
        - name: volume-etc-kafka-to-db-logger-forwarder-sidecar
          configMap:
            name: volume-etc-kafka-to-db-logger-forwarder-sidecar
            defaultMode: 288
        - name: volume-engine-tmp
          emptyDir: {}
      containers:
        - name: kafka-to-db
          image: dzo.sw.sbc.space/sbt_dev/ci90000011_bpmx_dev/kafka_to_db:1.0.1
          ports:
            - name: tcp-8088
              containerPort: 8088
              protocol: TCP
          env:
            - name: JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: kafka-to-db-kogito
                  key: JAVA_OPTS
            - name: TZ
              value: Europe/Moscow
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              cpu: '1'
              memory: 1Gi
          volumeMounts:
            - name: config-volume
              mountPath: /home/jboss/config
            - name: logsshare
              mountPath: /home/jboss/logs
            - name: volume-engine-tmp
              mountPath: /tmp
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
status:
  observedGeneration: 26
  replicas: 1
  updatedReplicas: 1
  readyReplicas: 1
  availableReplicas: 1
  conditions:
    - type: Progressing
      status: 'True'
      lastUpdateTime: '2022-04-29T08:41:11Z'
      lastTransitionTime: '2022-04-29T07:37:28Z'
      reason: NewReplicaSetAvailable
      message: ReplicaSet "kafka-to-db-kogito-57c7654866" has successfully progressed.
    - type: Available
      status: 'True'
      lastUpdateTime: '2022-04-29T09:21:27Z'
      lastTransitionTime: '2022-04-29T09:21:27Z'
      reason: MinimumReplicasAvailable
      message: Deployment has minimum availability.
