version: '2.1'

services:

  zookeeper:
    container_name: zookeeper
    image: strimzi/kafka:0.20.1-kafka-2.6.0
    command:
      [
        "sh",
        "-c",
        "bin/zookeeper-server-start.sh config/zookeeper.properties"
      ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: "/tmp/logs"
    networks:
      - kogito-network

  kafka:
    image: strimzi/kafka:0.20.1-kafka-2.6.0
    container_name: kafka
    command:
      [
        "sh",
        "-c",
        "bin/kafka-server-start.sh config/server.properties --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}"
      ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://kafka:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      LOG_DIR: "/tmp/logs"
    networks:
      - kogito-network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8081:8080
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_JMXPORT: 9997
    networks:
      - kogito-network

  api-mock-rest:
    container_name: api-mock-rest
    image: danielgtaylor/apisprout
    mem_limit: 50m
    ports:
      - 8000:8000
    volumes:
      - ../../stub/apis:/apis:z
    command: /apis/rest.yaml
    networks:
      - kogito-network

  kogito-bpmn-sync:
    container_name: kogito-bpmn-sync
    image: quarkus/kogito-bpmn-sync-jvm
    mem_limit: 200m
    ports:
      - 8080:8080
    depends_on:
      kafka:
        condition: service_started
      api-mock-rest:
        condition: service_started
    networks:
      - kogito-network

networks:
  kogito-network:
    driver: bridge
    name: kogito-network
